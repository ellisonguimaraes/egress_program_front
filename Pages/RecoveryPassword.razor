@page "/recuperar-senha"
@using EgressPortal.Models.Form
@using EgressPortal.Services.Interfaces
@using EgressPortal.Shared.Auth
@inject IUserServices UserServices
@inject ISnackbar Snackbar

<PageTitle>Esqueci a senha | Recuperar senha</PageTitle>

<TitlePageComponent Title="Recuperar senha" SubTitle="Esqueceu sua senha? recupere aqui!"/>

@if (_loadingApiResponse)
{
    <MudProgressLinear Color="Color.Warning" Indeterminate="true" />
}

<div class="d-flex flex-column align-items-center w-100">
    <div class="d-flex flex-column m-0 p-5 gap-4" style="width:100%;max-width: 500px;">
        <MudText Align="Align.Justify" Typo="Typo.body2" Color="Color.Dark">Para recuperar sua senha, digite o seu e-mail e receberá os passos para a recuperação.</MudText>
        <RecoveryPasswordFormComponent OnValidSubmitEventCallback="OnValidSubmitEventCallbackAsync"/>
    </div>
</div>

@code {
    private bool _loadingApiResponse = false;

    private async Task OnValidSubmitEventCallbackAsync(RecoveryPasswordForm recoveryPasswordForm)
    {
        _loadingApiResponse = true;
        StateHasChanged();

        await SendResetPasswordEmailAsync(recoveryPasswordForm.Email);

        _loadingApiResponse = false;
        StateHasChanged();
    }

    private async Task SendResetPasswordEmailAsync(string email)
    {
        var result = await UserServices.SendResetPasswordEmailAsync(email);

        if (result.StatusCode.Equals(204))
        {
            Snackbar.Add("O email de recuperação foi enviado com sucesso! Verifique seu email.", Severity.Success);
        }
        else
        {
            foreach (var error in result.Errors)
            {
                Snackbar.Add(error, Severity.Error);
            }
        }
    }
}