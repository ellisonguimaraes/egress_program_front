@page "/confirmar-email"
@using EgressPortal.Services.Interfaces
@using System.Net
@inject IUserServices UserServices
@inject ISnackbar Snackbar

<PageTitle>Confirmar Conta | Aguarde enquanto ocorre a confirmação da conta</PageTitle>

<TitlePageComponent Title="Confirmar Conta" SubTitle="Aguarde enquanto ocorre a confirmação da conta"/>

<div class="d-flex flex-column align-items-center w-100">
    <div class="d-flex flex-column m-0 p-5 align-items-center gap-4" style="width:100%;max-width: 800px;">
        @if (_hasConfirmedUser)
        {
            <div class="d-flex flex-column gap-4 align-items-center py-12">
                <MudIcon Icon="@Icons.Material.Filled.CheckCircleOutline" Style="font-size: 4rem;" Color="Color.Success"/>
                <MudText Align="Align.Center" Typo="Typo.h5" Color="Color.Dark" Style="font-weight: bold">Sua conta foi confirmada com sucesso!</MudText>
                <MudText Align="Align.Center" Typo="Typo.subtitle1" Color="Color.Dark">Agora que sua conta foi confirmada, faça login para finalizar o cadastro.</MudText>
                <MudButton Variant="Variant.Filled" Color="Color.Tertiary" StartIcon="@Icons.Material.Filled.Login" Href="@_loginRoute">ACESSAR</MudButton>
            </div>
        }

        @if (_loadingWhileConfirmingEmail)
        {
            <MudProgressCircular Color="Color.Warning" Size="Size.Large" Indeterminate="true" />
            <MudText Align="Align.Center" Typo="Typo.subtitle1">Aguarde um momento...</MudText>
        }
    </div>
</div>

@code {
    [Parameter]
    [SupplyParameterFromQuery(Name = "token")]
    public string Token { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "email")]
    public string Email { get; set; }

    private string _loginRoute = "login";
    private bool _hasConfirmedUser = false;
    private bool _loadingWhileConfirmingEmail = true;

    protected override async Task OnParametersSetAsync()
    {
        var result = await UserServices.ConfirmAccountAsync(Email, Token);

        _loadingWhileConfirmingEmail = false;

        Console.WriteLine(result.StatusCode);

        if (result.StatusCode.Equals((int)HttpStatusCode.NoContent))
        {
            _hasConfirmedUser = true;
            Snackbar.Add("Conta confirmada com sucesso!", Severity.Success);
        }
        else
        {
            foreach (var error in result.Errors)
            {
                Snackbar.Add(error, Severity.Error);
            }
        }

        StateHasChanged();
    }
}