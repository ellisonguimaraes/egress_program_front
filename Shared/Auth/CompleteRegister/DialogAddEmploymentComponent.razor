@using EgressPortal.Models.Form.Enums
@using System.Globalization

<MudDialog @bind-IsVisible="_isVisible" Options="_dialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6" Class="fw-bold">
            <MudIcon Icon="@Icons.Material.Filled.Badge" Class="mr-3" /> Novo Dado Profissional
        </MudText>
    </TitleContent>
    <DialogContent>
        <EditForm OnValidSubmit="OnValidSubmitAsync" Model="_employmentForm">
            <DataAnnotationsValidator/>

            <MudGrid Class="d-flex flex-row mb-4">
                <MudItem xs="12" sm="12" md="6" lg="6">
                    <MudTextField Variant="Variant.Outlined" Placeholder="Empresa" Label="Empresa" @bind-Value="_employmentForm.EnterpriseName" For="@(() => _employmentForm.EnterpriseName)"></MudTextField>
                </MudItem>
                <MudItem xs="12" sm="12" md="6" lg="6">
                    <MudTextField Variant="Variant.Outlined" Placeholder="Cargo" Label="Cargo" @bind-Value="_employmentForm.Role" For="@(() => _employmentForm.Role)"></MudTextField>
                </MudItem>
                <MudItem xs="12" sm="12" md="6" lg="6">
                    <MudTextField Variant="Variant.Outlined" Placeholder="Setor" Label="Setor" @bind-Value="_employmentForm.Section" For="@(() => _employmentForm.Section)"></MudTextField>
                </MudItem>
                <MudItem xs="12" sm="12" md="6" lg="6">
                    <MudNumericField Variant="Variant.Outlined" Immediate="false" Placeholder="Faixa salarial" Label="Faixa salarial" HelperText="Formato: NNNNN,NN" Format="N2" Culture="@(CultureInfo.GetCultureInfo("pt-BR"))" @bind-Value="_employmentForm.SalaryRange" For="@(() => _employmentForm.SalaryRange)" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.AttachMoney"/>
                </MudItem>
                <MudItem xs="12" sm="12" md="6" lg="6">
                    <MudDatePicker DateFormat="dd/MM/yyyy" Mask="@(new DateMask("dd/MM/yyyy"))" Variant="Variant.Outlined" Label="Data de Início" Editable="true" @bind-Date="_employmentForm.StartDate" For="@(() => _employmentForm.StartDate)" Placeholder="dd/MM/aaaa" />
                </MudItem>
                <MudItem xs="12" sm="12" md="6" lg="6">
                    <MudDatePicker DateFormat="dd/MM/yyyy" Mask="@(new DateMask("dd/MM/yyyy"))" Variant="Variant.Outlined" Label="Data de Término" Editable="true" @bind-Date="_employmentForm.EndDate" For="@(() => _employmentForm.EndDate)" Placeholder="dd/MM/aaaa" />
                </MudItem>
                <MudItem xs="12" sm="12" md="6" lg="6">
                    <MudCheckBox @bind-Checked="_employmentForm.IsCurrent" Label="É o emprego atual?" Color="Color.Primary"></MudCheckBox>
                    <MudCheckBox @bind-Checked="_employmentForm.IsPublicInitiative" Label="Iniciativa privada?" Color="Color.Primary"></MudCheckBox>
                </MudItem>
            </MudGrid>

            <div class="d-flex flex-row w-100 justify-content-end gap-3 pb-3">
                <MudButton Variant="Variant.Text" Color="Color.Dark" OnClick="Close">Cancelar</MudButton>
                <MudButton Variant="Variant.Outlined" Color="Color.Primary" ButtonType="ButtonType.Submit">Adicionar</MudButton>
            </div>
        </EditForm>
    </DialogContent>
</MudDialog>

@code {
    [Parameter]
    [EditorRequired]
    public EventCallback<CompleteRegisterEmploymentForm> OnValidSubmitCallback { get; set; }

    private bool _isVisible { get; set; }  = false;

    private CompleteRegisterEmploymentForm _employmentForm = new ();

    private DialogOptions _dialogOptions = new ()
    {
        DisableBackdropClick = true,
        FullWidth = true,
        CloseButton = true
    };

    public void Close()
    {
        _isVisible = false;
        CleanForm();
        StateHasChanged();
    }

    public void Open()
    {
        _isVisible = true;
        CleanForm();
        StateHasChanged();
    }

    private void CleanForm() => _employmentForm = new ();

    private async Task OnValidSubmitAsync()
    {
        await OnValidSubmitCallback.InvokeAsync(_employmentForm);
        Close();
    }
}