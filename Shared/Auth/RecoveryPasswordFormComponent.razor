@using EgressPortal.Models.Form

<EditForm OnValidSubmit="OnValidSubmitAsync" Model="_recoveryPasswordForm">
    <DataAnnotationsValidator/>
    <MudGrid Class="m-0 p-0 gap-2">
        <MudItem xs="12" sm="12" md="12" lg="12" Class="m-0 p-0">
            <MudTextField Variant="Variant.Outlined" Class="p-0 m-0" InputType="InputType.Email" Placeholder="E-mail" Label="E-mail" @bind-Value="_recoveryPasswordForm.Email" For="@(() => _recoveryPasswordForm.Email)"></MudTextField>
        </MudItem>
        <MudItem xs="12" sm="12" md="12" lg="12" Class="d-flex flex-row justify-content-center">
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Disabled="_buttonSubmitDisabled">Recuperar</MudButton>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    private RecoveryPasswordForm _recoveryPasswordForm = new RecoveryPasswordForm();

    private bool _buttonSubmitDisabled = false;

    [Parameter]
    [EditorRequired]
    public EventCallback<RecoveryPasswordForm> OnValidSubmitEventCallback { get; set; }

    private async Task OnValidSubmitAsync()
    {
        _buttonSubmitDisabled = true;
        await OnValidSubmitEventCallback.InvokeAsync(_recoveryPasswordForm);
        _buttonSubmitDisabled = false;
    }
}